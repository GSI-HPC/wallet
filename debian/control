Source: wallet
Section: net
Priority: extra
Maintainer: Russ Allbery <rra@debian.org>
Build-Depends: debhelper (>= 5), libdbi-perl, libdbd-sqlite3-perl,
 libkrb5-dev, libremctl-dev, libtest-pod-perl, perl
Standards-Version: 3.7.3

Package: keytab-backend
Architecture: all
Depends: krb5-admin-server, perl, remctl-server
Description: Provide existing Kerberos keytabs via remctl
 keytab-backend is a service that runs under remctld and allows
 authenticated clients to download Kerberos keytabs without changing the
 key stored in the Kerberos KDC.  It must run on the same host as the
 Kerberos KDC and uses kadmin.local to extract the existing key.  It
 applies additional ACLs to limit which keys may be extracted in this
 way.

Package: wallet-client
Architecture: any
Depends: ${shlibs:Depends}
Description: Kerberos-authenticated secure data management client
 The wallet is a system for managing secure data, authorization rules to
 retrieve or change that data, and audit rules for documenting actions
 taken on that data.  Objects of various types may be stored in the
 wallet or generated on request and retrieved by authorized users.  The
 wallet tracks ACLs, metadata, and trace information.  It uses Kerberos
 authentication.  One of the object types it supports is Kerberos keytabs,
 making it suitable as a user-accessible front-end to Kerberos kadmind
 with richer ACL and metadata operations.
 .
 This package contains the wallet client, which talks to a remote wallet
 server to store, download, and manage objects.

Package: wallet-server
Architecture: all
Depends: krb5-user, libdbi-perl, libdbd-sqlite3-perl | libdbd-mysql-perl,
 remctl-server, ${perl:Depends}
Suggests: libauthen-krb5-perl, libnet-remctl-perl
Description: Kerberos-authenticated secure data management server
 The wallet is a system for managing secure data, authorization rules to
 retrieve or change that data, and audit rules for documenting actions
 taken on that data.  Objects of various types may be stored in the
 wallet or generated on request and retrieved by authorized users.  The
 wallet tracks ACLs, metadata, and trace information.  It uses Kerberos
 authentication.  One of the object types it supports is Kerberos keytabs,
 making it suitable as a user-accessible front-end to Kerberos kadmind
 with richer ACL and metadata operations.
 .
 This package contains the wallet server, which runs under remctl,
 maintains the database of object metadata and secure objects, and
 responds to requests from the wallet client.
