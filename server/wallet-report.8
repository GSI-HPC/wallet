.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.26)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WALLET-REPORT 8"
.TH WALLET-REPORT 8 "2013-03-27" "1.0" "wallet"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
wallet\-report \- Wallet server reporting interface
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBwallet-report\fR \fItype\fR [\fIargs\fR ...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBwallet-report\fR provides a command-line interface for running reports on
the wallet database.  It is intended to be run on the wallet server as a
user with access to the wallet database and configuration, but can also be
made available via remctl to users who should have reporting privileges.
.PP
This program is a fairly thin wrapper around Wallet::Report that
translates command strings into method calls and returns the results.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBwallet-report\fR takes no traditional options.
.SH "COMMANDS"
.IX Header "COMMANDS"
.IP "acls" 4
.IX Item "acls"
.PD 0
.IP "acls duplicate" 4
.IX Item "acls duplicate"
.IP "acls empty" 4
.IX Item "acls empty"
.IP "acls entry <scheme> <identifier>" 4
.IX Item "acls entry <scheme> <identifier>"
.IP "acls unused" 4
.IX Item "acls unused"
.PD
Returns a list of ACLs in the database.  Except for the \f(CW\*(C`duplicate\*(C'\fR
report, ACLs will be listed in the form:
.Sp
.Vb 1
\&    <name> (ACL ID: <id>)
.Ve
.Sp
where <name> is the human-readable name and <id> is the numeric \s-1ID\s0.  The
numeric \s-1ID\s0 is what's used internally by the wallet system.  There will be
one line per \s-1ACL\s0.
.Sp
For the \f(CW\*(C`duplicate\*(C'\fR report, the output will instead be one duplicate set
per line.  This will be a set of ACLs that all have the same entries.
Only the names will be given, separated by spaces.
.Sp
If no search type is given, all the ACLs in the database will be returned.
If a search type (and possible search arguments) are given, then the ACLs
will be limited to those that match the search.
.Sp
The currently supported \s-1ACL\s0 search types are:
.RS 4
.IP "acls duplicate" 4
.IX Item "acls duplicate"
Returns all sets of ACLs that are duplicates, meaning that they contain
exactly the same entries.  Each line will be the names of the ACLs in a
set of duplicates, separated by spaces.
.IP "acls empty" 4
.IX Item "acls empty"
Returns all ACLs which have no entries, generally so that abandoned ACLs
can be destroyed.
.IP "acls entry <scheme> <identifier>" 4
.IX Item "acls entry <scheme> <identifier>"
Returns all ACLs containing an entry with given scheme and identifier.
The scheme must be an exact match, but the <identifier> string will match
any identifier containing that string.
.IP "acls unused" 4
.IX Item "acls unused"
Returns all ACLs that are not referenced by any of the objects in the
wallet database, either as an owner or on one of the more specific ACLs.
.RE
.RS 4
.RE
.IP "audit acls name" 4
.IX Item "audit acls name"
.PD 0
.IP "audit objects name" 4
.IX Item "audit objects name"
.PD
Returns all ACLs or objects that violate the current site naming policy.
Objects will be listed in the form:
.Sp
.Vb 1
\&    <type> <name>
.Ve
.Sp
and ACLs in the form:
.Sp
.Vb 1
\&    <name> (ACL ID: <id>)
.Ve
.Sp
where <name> is the human-readable name and <id> is the numeric \s-1ID\s0.  The
numeric \s-1ID\s0 is what's used internally by the wallet system.  There will be
one line per object or \s-1ACL\s0.
.IP "help" 4
.IX Item "help"
Displays a summary of all available commands.
.IP "objects" 4
.IX Item "objects"
.PD 0
.IP "objects acl <acl>" 4
.IX Item "objects acl <acl>"
.IP "objects flag <flag>" 4
.IX Item "objects flag <flag>"
.IP "objects owner <owner>" 4
.IX Item "objects owner <owner>"
.IP "objects type <type>" 4
.IX Item "objects type <type>"
.IP "objects unused" 4
.IX Item "objects unused"
.PD
Returns a list of objects in the database.  Objects will be listed in the
form:
.Sp
.Vb 1
\&    <type> <name>
.Ve
.Sp
There will be one line per object.
.Sp
If no search type is given, all objects in the database will be returned.
If a search type (and possible search arguments) are given, the objects
will be limited to those that match the search.
.Sp
The currently supported object search types are:
.RS 4
.IP "objects acl <acl>" 4
.IX Item "objects acl <acl>"
Returns all objects for which the given \s-1ACL\s0 name or \s-1ID\s0 has any
permissions.  This includes those objects owned by the \s-1ACL\s0 as well as
those where that \s-1ACL\s0 has any other, more limited permissions.
.IP "objects flag <flag>" 4
.IX Item "objects flag <flag>"
Returns all objects which have the given flag set.
.IP "objects owner <acl>" 4
.IX Item "objects owner <acl>"
Returns all objects owned by the given \s-1ACL\s0 name or \s-1ID\s0.
.IP "objects type <type>" 4
.IX Item "objects type <type>"
Returns all objects of the given type.
.IP "objects unused" 4
.IX Item "objects unused"
Returns all objects that have never been downloaded (have never been the
target of a get command).
.RE
.RS 4
.RE
.IP "owners <type\-pattern> <name\-pattern>" 4
.IX Item "owners <type-pattern> <name-pattern>"
Returns a list of all \s-1ACL\s0 entries in owner ACLs for all objects matching
both <type\-pattern> and <name\-pattern>.  These can be the type or name of
objects or they can be patterns using \f(CW\*(C`%\*(C'\fR as the wildcard character
following the normal rules of \s-1SQL\s0 patterns.
.Sp
The output will be one line per \s-1ACL\s0 line in the form:
.Sp
.Vb 1
\&    <scheme> <identifier>
.Ve
.Sp
with duplicates suppressed.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <rra@stanford.edu>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2008, 2009, 2010, 2013 The Board of Trustees of the Leland
Stanford Junior University
.PP
Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the \*(L"Software\*(R"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
.PP
\&\s-1THE\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R", \s-1WITHOUT\s0 \s-1WARRANTY\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0, \s-1EXPRESS\s0 \s-1OR\s0
\&\s-1IMPLIED\s0, \s-1INCLUDING\s0 \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0 \s-1THE\s0 \s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0,
\&\s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0 \s-1AND\s0 \s-1NONINFRINGEMENT\s0.  \s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1SHALL\s0
\&\s-1THE\s0 \s-1AUTHORS\s0 \s-1OR\s0 \s-1COPYRIGHT\s0 \s-1HOLDERS\s0 \s-1BE\s0 \s-1LIABLE\s0 \s-1FOR\s0 \s-1ANY\s0 \s-1CLAIM\s0, \s-1DAMAGES\s0 \s-1OR\s0 \s-1OTHER\s0
\&\s-1LIABILITY\s0, \s-1WHETHER\s0 \s-1IN\s0 \s-1AN\s0 \s-1ACTION\s0 \s-1OF\s0 \s-1CONTRACT\s0, \s-1TORT\s0 \s-1OR\s0 \s-1OTHERWISE\s0, \s-1ARISING\s0
\&\s-1FROM\s0, \s-1OUT\s0 \s-1OF\s0 \s-1OR\s0 \s-1IN\s0 \s-1CONNECTION\s0 \s-1WITH\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1OR\s0 \s-1THE\s0 \s-1USE\s0 \s-1OR\s0 \s-1OTHER\s0
\&\s-1DEALINGS\s0 \s-1IN\s0 \s-1THE\s0 \s-1SOFTWARE\s0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIWallet::Config\fR\|(3), \fIWallet::Report\fR\|(3), \fIwallet\-backend\fR\|(8)
.PP
This program is part of the wallet system.  The current version is
available from <http://www.eyrie.org/~eagle/software/wallet/>.
